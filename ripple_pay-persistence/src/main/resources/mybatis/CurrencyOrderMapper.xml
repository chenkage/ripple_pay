<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejar.persistence.mapper.CurrencyOrderMapper">
  <resultMap id="BaseResultMap" type="CurrencyOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="buyer_id" jdbcType="BIGINT" property="buyerId" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="unit_price" jdbcType="BIGINT" property="unitPrice" />
    <result column="currency_number" jdbcType="BIGINT" property="currencyNumber" />
    <result column="total_price" jdbcType="BIGINT" property="totalPrice" />
    <result column="present_currency_number" jdbcType="BIGINT" property="presentCurrencyNumber" />
    <result column="present_total_price" jdbcType="BIGINT" property="presentTotalPrice" />
    <result column="p_order_id" jdbcType="BIGINT" property="pOrderId" />
    <result column="main_trade_status" jdbcType="INTEGER" property="mainTradeStatus" />
    <result column="child_trade_status" jdbcType="INTEGER" property="childTradeStatus" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="trade_rate" jdbcType="VARCHAR" property="tradeRate" />
    <result column="trade_number" jdbcType="BIGINT" property="tradeNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_by, create_time, update_by, update_time, version, del_flag, order_id, 
    user_id, buyer_id, seller_id, unit_price, currency_number, total_price, present_currency_number, 
    present_total_price, p_order_id, main_trade_status, child_trade_status, order_type, 
    trade_rate, trade_number
  </sql>
  <select id="selectByExample" parameterType="CurrencyOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from e_currency_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_currency_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from e_currency_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="CurrencyOrderExample">
    delete from e_currency_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="CurrencyOrder" useGeneratedKeys="true" keyProperty="id">
    insert into e_currency_order (id, create_by, create_time, 
      update_by, update_time, version, 
      del_flag, order_id, user_id, 
      buyer_id, seller_id, unit_price, 
      currency_number, total_price, present_currency_number, 
      present_total_price, p_order_id, main_trade_status, 
      child_trade_status, order_type, trade_rate, 
      trade_number)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=TINYINT}, #{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{buyerId,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT}, #{unitPrice,jdbcType=BIGINT}, 
      #{currencyNumber,jdbcType=BIGINT}, #{totalPrice,jdbcType=BIGINT}, #{presentCurrencyNumber,jdbcType=BIGINT}, 
      #{presentTotalPrice,jdbcType=BIGINT}, #{pOrderId,jdbcType=BIGINT}, #{mainTradeStatus,jdbcType=INTEGER}, 
      #{childTradeStatus,jdbcType=INTEGER}, #{orderType,jdbcType=INTEGER}, #{tradeRate,jdbcType=VARCHAR}, 
      #{tradeNumber,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="CurrencyOrder" useGeneratedKeys="true" keyProperty="id">
    insert into e_currency_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="currencyNumber != null">
        currency_number,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="presentCurrencyNumber != null">
        present_currency_number,
      </if>
      <if test="presentTotalPrice != null">
        present_total_price,
      </if>
      <if test="pOrderId != null">
        p_order_id,
      </if>
      <if test="mainTradeStatus != null">
        main_trade_status,
      </if>
      <if test="childTradeStatus != null">
        child_trade_status,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="tradeRate != null">
        trade_rate,
      </if>
      <if test="tradeNumber != null">
        trade_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="currencyNumber != null">
        #{currencyNumber,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=BIGINT},
      </if>
      <if test="presentCurrencyNumber != null">
        #{presentCurrencyNumber,jdbcType=BIGINT},
      </if>
      <if test="presentTotalPrice != null">
        #{presentTotalPrice,jdbcType=BIGINT},
      </if>
      <if test="pOrderId != null">
        #{pOrderId,jdbcType=BIGINT},
      </if>
      <if test="mainTradeStatus != null">
        #{mainTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="childTradeStatus != null">
        #{childTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="tradeRate != null">
        #{tradeRate,jdbcType=VARCHAR},
      </if>
      <if test="tradeNumber != null">
        #{tradeNumber,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="CurrencyOrderExample" resultType="java.lang.Long">
    select count(*) from e_currency_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_currency_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerId != null">
        buyer_id = #{record.buyerId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=BIGINT},
      </if>
      <if test="record.currencyNumber != null">
        currency_number = #{record.currencyNumber,jdbcType=BIGINT},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=BIGINT},
      </if>
      <if test="record.presentCurrencyNumber != null">
        present_currency_number = #{record.presentCurrencyNumber,jdbcType=BIGINT},
      </if>
      <if test="record.presentTotalPrice != null">
        present_total_price = #{record.presentTotalPrice,jdbcType=BIGINT},
      </if>
      <if test="record.pOrderId != null">
        p_order_id = #{record.pOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.mainTradeStatus != null">
        main_trade_status = #{record.mainTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.childTradeStatus != null">
        child_trade_status = #{record.childTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.tradeRate != null">
        trade_rate = #{record.tradeRate,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNumber != null">
        trade_number = #{record.tradeNumber,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_currency_order
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      buyer_id = #{record.buyerId,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      unit_price = #{record.unitPrice,jdbcType=BIGINT},
      currency_number = #{record.currencyNumber,jdbcType=BIGINT},
      total_price = #{record.totalPrice,jdbcType=BIGINT},
      present_currency_number = #{record.presentCurrencyNumber,jdbcType=BIGINT},
      present_total_price = #{record.presentTotalPrice,jdbcType=BIGINT},
      p_order_id = #{record.pOrderId,jdbcType=BIGINT},
      main_trade_status = #{record.mainTradeStatus,jdbcType=INTEGER},
      child_trade_status = #{record.childTradeStatus,jdbcType=INTEGER},
      order_type = #{record.orderType,jdbcType=INTEGER},
      trade_rate = #{record.tradeRate,jdbcType=VARCHAR},
      trade_number = #{record.tradeNumber,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="CurrencyOrder">
    update e_currency_order
    <set>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="currencyNumber != null">
        currency_number = #{currencyNumber,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=BIGINT},
      </if>
      <if test="presentCurrencyNumber != null">
        present_currency_number = #{presentCurrencyNumber,jdbcType=BIGINT},
      </if>
      <if test="presentTotalPrice != null">
        present_total_price = #{presentTotalPrice,jdbcType=BIGINT},
      </if>
      <if test="pOrderId != null">
        p_order_id = #{pOrderId,jdbcType=BIGINT},
      </if>
      <if test="mainTradeStatus != null">
        main_trade_status = #{mainTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="childTradeStatus != null">
        child_trade_status = #{childTradeStatus,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="tradeRate != null">
        trade_rate = #{tradeRate,jdbcType=VARCHAR},
      </if>
      <if test="tradeNumber != null">
        trade_number = #{tradeNumber,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="CurrencyOrder">
    update e_currency_order
    set create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
      order_id = #{orderId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=BIGINT},
      seller_id = #{sellerId,jdbcType=BIGINT},
      unit_price = #{unitPrice,jdbcType=BIGINT},
      currency_number = #{currencyNumber,jdbcType=BIGINT},
      total_price = #{totalPrice,jdbcType=BIGINT},
      present_currency_number = #{presentCurrencyNumber,jdbcType=BIGINT},
      present_total_price = #{presentTotalPrice,jdbcType=BIGINT},
      p_order_id = #{pOrderId,jdbcType=BIGINT},
      main_trade_status = #{mainTradeStatus,jdbcType=INTEGER},
      child_trade_status = #{childTradeStatus,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      trade_rate = #{tradeRate,jdbcType=VARCHAR},
      trade_number = #{tradeNumber,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>